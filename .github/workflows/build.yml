# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Publish Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Set default version
      run: echo "VERSION=$(git describe --tags --dirty)" >> $GITHUB_ENV
    - name: Set release version
      if: ${{ github.event.action == 'published' && !github.event.release.draft}}
      run:  TAG=$(git describe --tags); if github.event.release.prerelease; then RELEASE="-prerelease"; else  RELEASE="";  fi; echo "VERSION=${TAG}${RELEASE}" >> $GITHUB_ENV
    - name: Update version
      run: mvn versions:set -DnewVersion='${{ env.VERSION }}'
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.0
      with:
        name: teamcity-msteam-notifier
        path: tcmsteamsbuildnotifier-web-ui/target/tcmsteamsbuildnotifier-${{ env.VERSION }}.zip
    - name: Upload Release Asset
      id: upload-release-asset 
      if: ${{ github.event.action == 'published' && !github.event.release.draft}}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: tcmsteamsbuildnotifier-web-ui/target/tcmsteamsbuildnotifier-${{ env.VERSION }}.zip
        asset_name: tcmsteamsbuildnotifier-${{ env.VERSION }}.zip
        asset_content_type: application/zip
    - name: Upload Release Asset to Jetbrains 
      if: ${{ github.event.action == 'published' && !github.event.release.draft}}
      run: |
        curl -i --header "Authorization: Bearer ${{ secrets.JETBRAINS_TOKEN }}" -F pluginId=12645 -F file=@tcmsteamsbuildnotifier-web-ui/target/tcmsteamsbuildnotifier-${{ env.VERSION }}.zip -F channel=stable https://plugins.jetbrains.com/plugin/uploadPlugin